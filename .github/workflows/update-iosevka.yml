name: Iosevka DEB Build
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version to be built'
        default: 'v3.0.1'
        required: true
        type: string
  workflow_call:
    inputs:
      version:
        required: true
        type: string

jobs:
  iosevka-build:
    name: Build iosevka packages
    runs-on: ubuntu-latest
    env:
      fontdir: /usr/share/fonts/truetype/iosevka
      docdir: /usr/share/doc/iosevka
    steps:
    - name: Download iosevka.tar.xz
      run: |
          mkdir source
          cd source
          wget -q https://github.com/ryanoasis/nerd-fonts/releases/download/${{ inputs.version }}/Iosevka.tar.xz 
          tar -xf Iosevka.tar.xz
    - name: Build IosevkaNerdFont.deb
      env:
        basename: IosevkaNerdFont
        pkgname: iosevka-nerd-font
      run: |
          mkdir -p './'$basename$fontdir
          cp './source/'$basename'-Bold.ttf' './'$basename$fontdir'-Bold.ttf'
          cp './source/'$basename'-BoldItalic.ttf' './'$basename$fontdir'-BoldItalic.ttf'
          cp './source/'$basename'-Italic.ttf' './'$basename$fontdir'-Italic.ttf'
          cp './source/'$basename'-Regular.ttf' './'$basename$fontdir'-Regular.ttf'

          mkdir -p './'$basename'/DEBIAN'
          export controlfile='./'$basename'/DEBIAN/control'
          touch controlfile
          echo 'Package: '$pkgname >> controlfile
          echo 'Maintainer: Foil-hat-guy <dev@foilhatguy.casa>' >> controlfile
          echo 'Priority: optional' >> controlfile
          echo 'Essentional: no' >> controlfile
          echo 'Architecture: all' >> controlfile
          echo 'Section: fonts' >> controlfile
          echo 'Homepage: https://www.nerdfonts.com/' >> controlfile
          echo 'Version: '$(echo ${{ inputs.version }} | cut -d 'v' -f 2) >> controlfile
          echo 'Installed-Size: '$(du -sk './'$basename | cut -f 1) >> controlfile
          echo 'Description: Iosevka nerd font.' >> controlfile
          echo ' This package contains regular, bold, italic and bold italic fonts.' >> controlfile

          echo '======='
          cat controlfile
          echo '======='
          
          cp ./*.deb "/artifacts/"'
          cd ./artifacts
          ls
    
    - name: Save DEB to cache
      uses: actions/cache/save@v3.3.1
      with:
        path: /home/runner/work/OPi5Plus-Soft/OPi5Plus-Soft/artifacts/iosevka*.deb
        key: iosevka.deb
    
  report-fail:
    name: Report build fail.
    runs-on: ubuntu-latest
    if: always() && needs.iosevka-build.result == 'failure'
    needs: iosevka-build
    steps:
    - name: Send notification
      uses: appleboy/telegram-action@v0.1.1
      with:
        token: ${{ secrets.TELEGRAMBOT }}
        to: ${{ secrets.TELEGRAMCHAT }}
        message: Warning! Iosevka build failed!

  report-ok:
    name: Report new version.
    runs-on: ubuntu-latest
    if: always() && needs.iosevka-build.result == 'success'
    needs: iosevka-build
    steps:
    - name: Send notification
      uses: appleboy/telegram-action@v0.1.1
      with:
        token: ${{ secrets.TELEGRAMBOT }}
        to: ${{ secrets.TELEGRAMCHAT }}
        message: Good News! A new version ${{ inputs.version }} of Iosevka is ready!
